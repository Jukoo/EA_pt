##########################[ ON BUILD ] 
#  ▌ ▌   ▞▀▖▛▀▖▞▀▖▀▛      version : 0.1.0 beta 
#  ▙▄▌▄▄▖▚▄ ▙▄▘▌ ▌ ▌      codename: sugar-bowl 
#  ▌ ▌   ▖ ▌▌  ▌ ▌ ▌      *****[stage 1]******
#  ▘ ▘   ▝▀ ▘  ▝▀  ▘        ****************
#------------------------>[https://github.com/juko/Hspot] 
#   Buy Me a Coffee      | 
#################################################################
# this file is basic h-spot config you can modify the behavior  #
# of the script by activating or disabling some script module   #
# by decompressing the lines below                              #
#################################################################
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# COMMENT  OR UNCOMMENT THE LINES BELOW TO ENABLE OR DESABLE A +
#                      MODULE                                  +
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#set -x              #-> Activate the debugger and show how the script run 
set -o errexit       #->  exit if error was occured  in the script [recommanded] 
#set -o nounset      #-> the show the unbounde variable  [usefull to optimize and refactor]
#set -euo pipefail   #-> strict mode show the hidden failure [ not recommanded ] 

###             ###
# STEP RUNNING ...#
###             ###

#-> INSTALL THE REQUIRED PACKAGES 
#-> DISPATCH THE  CONFIGURATION IN THE TARGETED NEEDED FILE 
file_test=b2h
null_byte=$((0x0))         # success   
unlocate_file=$((0x1))     # Error exit 

# if  the file source is not defined it nothing will be printed 

. beehive
 
[ $? -eq $null_byte ] || exit $unlocate_file  # exit if source file is not available  
printHeadscript        # show the head information about the script  

#[[ Authentification ]]  
# add authentification in next feature 

 
#~~~~~~~~~~~~~~~~~~~~~~~#
# ===== B A T S ======= # 
#~~~~~~~~~~~~~~~~~~~~~~~#
[[ bash_automated_test_system ]] 
automate_testing_system 

fudge 25 .4 "testing script integrity"

# running automating testing system 
# check if testing cmd is available 
[ $? -eq ${null_byte} ] || exit $ERR_SHELL_OUT 
#looking file testing  
prompt


remaning_test=$(bats -c ${file_test}) #=> count how many test will be lauched 
prompt "$remaning_test test remaning" 

bats -p ${file_test} 
##                   ##
# Script proccessing  #
##                   ## 
[[ autorun ]] 
fudge 35 .3 initializing 
:initscaling:          # check if the script is run as root or not 
#pi::pkgMan            # extracte the pkgmanager   
libspkgs-Install       # install all required libs  


[[ config_writing ]] 

#targetbinded          # show  the line printed on etc/dnsmasq.conf  
enable_dnsmasq_conf    # write first headline  in etc/dnsmasq.conf

#host_data             # print the host ip target on stdout  term 
dnsmask_hosts          # write targeted hosted domain in /var/run/dnsmasq/hosts  

[[ ssl_certification ]] 

# ssl certification  installer 
third_party_certificate_installation 
# auto update let's encrypt on run [ is  enable by default ] 
# everytime you run the script it will do the update 
# while Internet connectivity is running or it 'll be skipped...  
# check_cnx_level
auto:update:letsencrypt: 

##-------------##
#--Basics Args--#
##-------------##

# enable argument
 
[ -n $1 ] && arguments_parser $1


